@using AVStaffing.Models
@model AVStaffing.Models.ViewModels.OwnerViewModel
@{
    ViewBag.Title = "AddOwner";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string pageMode = Model.Id != 0 ? "Edit" : "Add";
}
<style>
    .field-validation-error {
        color: red
    }

    .ui-datepicker-year {
        display: none !important;
    }

    .datepicker-years {
        display: none !important;
    }

    .validation-summary-errors {
        color: red;
    }

    .box-size {
        width: 20px;
        height: 30px;
    }

    .checkbox-size {
        width: 20px;
        height: 20px;
        margin-left: 10px;
    }

    .remove-corp {
        padding: 0;
    }

    .search-box {
        position: relative;
        width: 300px; /* Adjust as per your requirement */
    }

    .search-input {
        width: 100%;
        padding: 10px 20px 10px 40px;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 20px;
        outline: none;
    }

    .search-button {
        position: absolute;
        top: 6px;
        left: 0;
        border: none;
        background: none;
        padding: 10px;
        border-radius: 20px;
        cursor: pointer;
    }

        .search-button .fas {
            color: #333; /* Icon color */
        }
</style>

<!-- Begin Subheader -->
<div class="subheader py-2 py-lg-6 subheader-transparent" id="kt_subheader">
    <div class="container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
        <!-- Begin Info -->
        <div class="d-flex align-items-center flex-wrap mr-1">
            <!-- Begin Page Heading -->
            <div class="d-flex align-items-baseline flex-wrap mr-5">
                <!-- Begin Page Title -->
                <h5 class="text-dark font-weight-bold my-1 mr-5">
                    Client Management
                </h5>
                <!-- End Page Title -->
                <!-- Begin Breadcrumb -->
                <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Clients", "Client")">
                            Clients
                        </a>
                    </li>

                    <li class="breadcrumb-item">
                        <a href="#/" class="text-muted">
                            @Html.Raw(pageMode == "Add" ? "Add Client" : "Edit Client")
                        </a>
                    </li>
                </ul>
                <!-- End Breadcrumb -->
            </div>
            <!-- End Page Heading -->
        </div>
        <!-- End Info -->
    </div>
</div>
<!-- End Subheader -->
<!-- Begin Entry -->
<div class="d-flex flex-column-fluid">
    <!-- Begin Container -->
    <div class="container">
        <!-- Begin Card -->
        @using (Html.BeginForm("AddClient", "Client", FormMethod.Post, new { id = "ownerForm", enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(x => x.Id)

            <div class="card card-custom">
                <div class="card-header">
                    <div class="card-title">
                        <span class="card-icon"><i class="fa fa-user text-primary"></i></span>
                        <h3 class="card-label">@Html.Raw(pageMode == "Add" ? "Create Client" : "Update Client")</h3>
                    </div>
                </div>

                <div class="card-body px-0">
                    <div class="row">
                        <div class="col-xl-2"></div>
                        <div class="col-xl-7 my-2">
                            <div class="form-group row">
                                <!-- FirstName Field -->
                                <div class="col-lg-6">
                                    @Html.LabelFor(x => x.FirstName, new { @class = "col-form-label text-lg-right text-left" })
                                    <div>
                                        @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control form-control-lg form-control-solid" })
                                        @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <!-- MiddleName Field -->
                                <div class="col-lg-6">
                                    @Html.LabelFor(x => x.MiddleName, new { @class = "col-form-label text-lg-right text-left" })
                                    <div>
                                        @Html.TextBoxFor(x => x.MiddleName, new { @class = "form-control form-control-lg form-control-solid" })
                                        @Html.ValidationMessageFor(x => x.MiddleName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group row">
                                <!-- LastName Field -->
                                <div class="col-lg-6">
                                    @Html.LabelFor(x => x.LastName, new { @class = "col-form-label text-lg-right text-left" })
                                    <div>
                                        @Html.TextBoxFor(x => x.LastName, new { @class = "form-control form-control-lg form-control-solid" })
                                        @Html.ValidationMessageFor(x => x.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <!-- Email Field -->
                                <div class="col-lg-6">
                                    @Html.LabelFor(x => x.Email, new { @class = "col-form-label text-lg-right text-left" })
                                    <div>
                                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control form-control-lg form-control-solid" })
                                        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group row">
                                <!-- Address Field -->
                                <div class="col-lg-6">
                                    @Html.LabelFor(x => x.Address, new { @class = "col-form-label text-lg-right text-left" })
                                    <div>
                                        @Html.TextBoxFor(x => x.Address, new { @class = "form-control form-control-lg form-control-solid" })
                                        @Html.ValidationMessageFor(x => x.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <!-- SIN Field -->
                                <div class="col-lg-6">
                                    @Html.LabelFor(x => x.SIN, new { @class = "col-form-label text-lg-right text-left" })
                                    <div>
                                        @Html.TextBoxFor(x => x.SIN, new { @class = "form-control form-control-lg form-control-solid" })
                                        @Html.ValidationMessageFor(x => x.SIN, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group row">
                                <!-- Phone Field -->
                                <div class="col-lg-6">
                                    @Html.LabelFor(x => x.Phone, "Phone", new { @class = "col-form-label text-lg-right text-left" })
                                    <div>
                                        @Html.TextBoxFor(x => x.Phone, new { @class = "form-control form-control-lg form-control-solid" })
                                        @Html.ValidationMessageFor(x => x.Phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <!-- DateOfBirth Field -->
                                <div class="col-lg-6">
                                    @Html.LabelFor(x => x.DateOfBirth, new { @class = "col-form-label text-lg-right text-left" })
                                    <div>
                                        @Html.TextBoxFor(x => x.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-lg form-control-solid", type = "date" })
                                        @Html.ValidationMessageFor(x => x.DateOfBirth, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group row">
                                <!-- IsPersonalHST Field -->
                                <div class="col-lg-6">
                                    @Html.LabelFor(x => x.AuthorizationType, new { @class = "col-form-label text-lg-right text-left" })
                                    <div>
                                        @Html.DropDownListFor(x => x.AuthorizationType, new SelectList(Model.AuthorizationOptions, "Value", "Text"), new { @class = "form-control form-control-lg form-control-solid" })
                                        @Html.ValidationMessageFor(x => x.AuthorizationType, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-2">
                                    @Html.LabelFor(x => x.IsPersonalHST, new { @class = "col-form-label text-lg-right text-left" })
                                    <div class="mt-2">
                                        @Html.CheckBoxFor(x => x.IsPersonalHST, new { @class = "box-size", id = "isPersonalHST" })
                                        @Html.ValidationMessageFor(x => x.IsPersonalHST, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <!-- HSTNumber Field (wrapped in its own div for easy targeting) -->
                                <div class="col-lg-4" id="hstNumberContainer">
                                    @Html.LabelFor(x => x.HSTNumber, new { @class = "col-form-label text-lg-right text-left" })
                                    <div>
                                        @Html.TextBoxFor(x => x.HSTNumber, new { @class = "form-control form-control-lg form-control-solid", id = "hstNumber" })
                                        @Html.ValidationMessageFor(x => x.HSTNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div id="corporationInputs"></div>


                            <div id="corporationsList">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Corporation Name</th>
                                            <th>Corporation Key</th>
                                            <th>Address</th>
                                            <th>Status</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var corporation in Model.Corporations)
                                        {
                                            <tr>
                                                <td>@corporation.CorpName</td>
                                                <td>@corporation.CorpKey</td>
                                                <td>@corporation.Address</td>
                                                <td>
                                                    <span class="badge badge-success">Saved</span>
                                                </td>

                                                <td>
                                                    <a style="cursor: pointer !important" href="#/" class="deleteSvedCorporation" data-id="@corporation.Id">
                                                        <i class="fas fa-trash text-danger"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div>
                                <button class="btn btn-primary" type="button" data-toggle="modal" data-target="#addNewCorporationModal">
                                    Add Corporation
                                </button>
                            </div>
                            <div class="form-group">
                                <div class="float-right">
                                    <button type="submit" class="btn btn-primary font-weight-bold btn-lg px-3 font-size-base">
                                        @Html.Raw(pageMode == "Add" ? "Add Client" : "Save Changes")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <!-- Modal -->
    <div class="modal fade " id="addNewCorporationModal" tabindex="-1" role="dialog" aria-labelledby="corporationModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="corporationModalLabel">Add Corporation</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="corporationForm">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="corpName">Corporation Name</label>
                                    <input type="text" class="form-control" id="corpName" name="CorpName" required>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="corpKey">Corporation Key</label>
                                    <input type="text" class="form-control" id="corpKey" name="CorpKey" required>
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                <label for="corpFiscalYear">Corporation Fiscal Year</label>
                                <div class="input-group">
                                    <input type="text" class="form-control" id="corpFiscalYear" name="CorpFiscalYear">
                                    <div class="input-group-append corp-group">
                                        <span class="input-group-text"><i class="fa fa-calendar" aria-hidden="true"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                <label for="address">Business Address</label>
                                <input type="text" class="form-control" id="address" name="Address" required>
                            </div>
                            <div class="form-group col-md-4">
                                <label for="businessEmail">Business Email</label>
                                <input type="email" class="form-control" id="businessEmail" name="BusinessEmail">
                            </div>
                            <div class="form-group col-md-4">
                                <label for="businessNumber">Business Number</label>
                                <input type="text" class="form-control" id="businessNumber" name="BusinessNumber" required minlength="8" maxlength="8">
                            </div>
                            <div class="form-group row col-12">
                                <div class="col-4">
                                    <label for="authorizationType">Authorization</label>
                                    <select class="form-control" id="authorizationType" name="AuthorizationType">
                                        <option value="Personal">Personal</option>
                                        <option value="Business">Business</option>
                                        <option value="Both">Both</option>
                                    </select>
                                </div>
                            </div>
                            <div class="row form-group col-12">
                                <div class="d-flex flex-column col-4">
                                    <label for="isHSTRegistration">HST Registration</label>
                                    <input type="checkbox" class="checkbox-size" id="isHSTRegistration" name="IsHSTRegistration">
                                </div>
                                <div id="hstDependentFields" class="row col-8" style="display: none;margin-left:0px;padding-right:0px">
                                    <div class=" col-6" style="padding-right:0px">
                                        <label for="hstReportingPeriod">HST Reporting Period</label>
                                        <select class="form-control" id="hstReportingPeriod" name="HSTReportingPeriod">
                                            <option value="" disabled>Select a period</option>
                                            <option value="Monthly">Monthly</option>
                                            <option value="Quarterly">Quarterly</option>
                                            <option value="Annually">Annually</option>
                                        </select>
                                    </div>
                                    <div class="col-6" style="padding-right:0px;padding-left:25px">
                                        <label for="hstFiscalYear">HST Fiscal Year</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control" id="hstFiscalYear" name="HSTFiscalYear">
                                            <div class="input-group-append hst-group">
                                                <span class="input-group-text"><i class="fa fa-calendar" aria-hidden="true"></i></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <div class="row form-group col-12">
                                <div class="d-flex flex-column col-4">
                                    <label for="isPayroll">Payroll</label>
                                    <input type="checkbox" class="checkbox-size" id="isPayroll" name="IsPayroll">
                                </div>
                                <div id="PayrollDependentFields" class="row col-8" style="display: none; margin-left: 0px; padding-right: 0px">
                                    <div class="col-md-6" style="padding-right:0px">
                                        <label for="pd7aReportingPeriod">PD7A Reporting Period</label>
                                        <select class="form-control" id="pd7aReportingPeriod" name="PD7AReportingPeriod">
                                            <option value="" disabled>Select a period</option>
                                            <option value="Monthly">Monthly</option>
                                            <option value="Quarterly">Quarterly</option>
                                            <option value="Annually">Annually</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </form>
                    <hr/>
                    <div style="display:flex;align-items:center;justify-content:center;margin-bottom:20px">
                        <div class="search-box">
                            <input type="text" id="searchField" class="search-input" placeholder="Search...">
                            <button class="search-button">
                                <i class="fas fa-search"></i>
                            </button>
                            <div id="loadingIcon" style="display: none; position: absolute; right: 35px; top: 50%; transform: translateY(-50%);">
                                <i class="fas fa-spinner fa-spin"></i>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div id="existingCorporationsList">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Corporation Name</th>
                                            <th>Corporation Key</th>
                                            <th>Address</th>
                                            <th>Action</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td colspan="4" style="text-align:center">No data to show</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary btn-sm" id="saveCorporation">Save Corporation</button>
                </div>
            </div>
        </div>
    </div>

    <!-- End Container -->
    @section Scripts{
        <script>
            $(document).ready(function () {
                function positionDatePicker(input, inst) {
                    var inputOffset = $(input).offset();
                    var inputHeight = $(input).outerHeight();
                    var datePickerWidth = inst.dpDiv.outerWidth();
                    var windowWidth = $(window).width();

                    var top =  150+inputHeight;
                    var left = inputOffset.left;

                    if (left + datePickerWidth > windowWidth) {
                        left = windowWidth - datePickerWidth;
                    }

                    inst.dpDiv.css({ top: top +'px', left: left + 'px' });
                }

                $('#hstFiscalYear, #corpFiscalYear').datepicker({
                    changeMonth: true,
                    changeYear: false,
                    showButtonPanel: true,
                    dateFormat: 'M-dd',
                    beforeShow: function (input, inst) {
                        setTimeout(function () {
                            positionDatePicker(input, inst);
                        }, 0);
                    }
                });
                $('.corp-group').click(function () {
                    $('#corpFiscalYear').datepicker('show');
                });
                $('.hst-group').click(function () {
                    $('#hstFiscalYear').datepicker('show');
                });

            });
            function escapeHtml(unsafe) {
                return unsafe.replace(/&/g, "&amp;")
                    .replace(/</g, "&lt;")
                    .replace(/>/g, "&gt;")
                    .replace(/"/g, "&quot;")
                    .replace(/'/g, "&#039;");
            }

            function appendCorporation(corporation,status) {
                var index = $('#corporationInputs div').length;
                var corporationDiv = $('<div>').addClass('corporation-entry');
                $.each(corporation, function (key, value) {
                    var inputName = 'Corporations[' + index + '].' + key;
                    $('<input>').attr({
                        type: 'hidden',
                        name: inputName,
                        value: value
                    }).appendTo(corporationDiv);
                });
                $('#corporationInputs').append(corporationDiv);
                var newRow = '<tr><td>' + corporation.CorpName + '</td><td>' + corporation.CorpKey + '</td><td>' + corporation.Address + '</td>' + '<td><span class="badge badge-danger">'+status+'</span></td><td><button type="button" class="btn remove-corp" data-index="' + index + '"><i class="fas fa-trash text-danger"></i></button></td></tr>';
                $('#corporationsList tbody').append(newRow);
            }

            function saveExistingCorporation(id, name, key, address) {
                var corporation = {
                    Id: id,
                    IsCorporation: true,
                    CorpName: name,
                    CorpKey: key,
                    Address: address,
                    BusinessEmail: "",
                    BusinessNumber: "",
                    IsHSTRegistration: false,
                    HSTFiscalYear: null,
                    HSTReportingPeriod: null,
                    IsPayroll: false,
                    PD7AReportingPeriod: null,
                    CorpFiscalYear: null
                };
                appendCorporation(corporation,'Existing');
                $('#addNewCorporationModal').modal('hide');

            }


            var searchTimeout;

            document.addEventListener("DOMContentLoaded", function () {
                var searchField = document.getElementById('searchField');

                searchField.addEventListener('keyup', function () {
                    clearTimeout(searchTimeout);

                    searchTimeout = setTimeout(function () {
                        var searchQuery = searchField.value.trim();

                        if (searchQuery) {
                            console.log("Searching for:", searchQuery);
                            searchCorporations(searchQuery);
                        }
                        else {
                            var tbody = document.querySelector("#existingCorporationsList tbody");
                            tbody.innerHTML = "";
                            var row = tbody.insertRow(); 
                            var cell = row.insertCell(0); 
                            cell.textContent = "No data to show"; 
                            cell.setAttribute("colspan", "5"); 
                            cell.style.textAlign = "center"; 
                        }
                    }, 1200);
                });
            });

            function searchCorporations(query) {
                if (query.length === 0) return;
               var apiUrl = '@Url.Action("SearchCorporations", "Client")?query=' + encodeURIComponent(query);
                $('#loadingIcon').show();
                fetch(apiUrl)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        var tbody = document.querySelector("#existingCorporationsList tbody");
                        tbody.innerHTML = "";
                        if (data.length === 0) {
                            var row = tbody.insertRow(); // Insert a new row
                            var cell = row.insertCell(0); // Insert a single cell
                            cell.textContent = "No data to show"; // Set the text
                            cell.setAttribute("colspan", "5"); // Span the cell across 5 columns
                            cell.style.textAlign = "center"; // Center the text within the cell
                        } else {
                            data.forEach(corp => {
                                var row = tbody.insertRow();
                                var cellName = row.insertCell(0);
                                var cellKey = row.insertCell(1);
                                var cellAddress = row.insertCell(2);
                                var cellAction = row.insertCell(3);

                                cellName.textContent = corp.CorpName;
                                cellKey.textContent = corp.CorpKey;
                                cellAddress.textContent = corp.Address;
                                var actionHtml = `<button type="button"  onclick="saveExistingCorporation(${corp.Id},'${escapeHtml(corp.CorpName)}', '${escapeHtml(corp.CorpKey)}', '${escapeHtml(corp.Address)}')" class="btn"><i class="fas fa-plus-circle text-success"></i></button>`;
                                cellAction.innerHTML = actionHtml;
                            });
                        }
                        $('#loadingIcon').hide();

                    })
                    .catch(error => {
                        $('#loadingIcon').hide();
                        console.error('Error:', error);
                    });
            }

            $(document).ready(function () {
                $('#saveCorporation').click(function () {
                    var form = document.getElementById('corporationForm');
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                        form.reportValidity();
                    } else {
                        var corporation = {
                            Id:0,
                            IsCorporation: true,
                            CorpName: $('#corpName').val(),
                            CorpKey: $('#corpKey').val(),
                            CorpFiscalYear: $('#corpFiscalYear').val(),
                            Address: $('#address').val(),
                            BusinessEmail: $('#businessEmail').val(),
                            BusinessNumber: $('#businessNumber').val(),
                            IsHSTRegistration: $('#isHSTRegistration').is(':checked'),
                            HSTFiscalYear: $('#hstFiscalYear').val(),
                            HSTReportingPeriod: $('#hstReportingPeriod').val(),
                            IsPayroll: $('#isPayroll').is(':checked'),
                            PD7AReportingPeriod: $('#pd7aReportingPeriod').val(),
                            AuthorizationType: $('#authorizationType').val()
                        };
                        appendCorporation(corporation,'New');
                        $('#addNewCorporationModal input').val('');
                        $('#addNewCorporationModal').modal('hide');
                    }

                });

                $('#corporationsList tbody').on('click', '.remove-corp', function () {
                    var indexToRemove = $(this).data('index');

                    $('#corporationInputs .corporation-entry').eq(indexToRemove).remove();

                    $(this).closest('tr').remove();

                    $('#corporationInputs .corporation-entry').each(function (newIndex) {
                        $(this).find('input').each(function () {
                            var name = $(this).attr('name');
                            var newName = name.replace(/Corporations\[\d+\]/, 'Corporations[' + newIndex + ']');
                            $(this).attr('name', newName);
                        });
                    });

                    $('#corporationsList tbody .remove-corp').each(function (i) {
                        $(this).data('index', i);
                        $(this).attr('data-index', i);
                    });
                });

                 $(".deleteSvedCorporation").click(function() {
                    var id = $(this).data("id");
                    var row = $(this).parents("tr");
                    bootbox.confirm("This is saved Corporation. Are you sure you want to remove this Corporation ?",
                    function(r) {
                        if (r) {
                            $.post("@Url.Action("RemoveCorporation", "Client")",
                                    {
                                        corpId: id
                                    })
                                .done(function() {
                                    $(row).remove();
                                })
                                .fail(function() {

                                });
                                }
                        });
                 });


                toggleHSTNumberField();

                $('#isPersonalHST').change(function () {
                    toggleHSTNumberField();
                });

                $('#isHSTRegistration').change(function () {
                    toggleHSTDependentFields();
                });
                $('#isPayroll').change(function () {
                    togglePayrollDependentFields();
                });

                function toggleHSTNumberField() {
                    if ($('#isPersonalHST').is(':checked')) {
                        $('#hstNumberContainer').show();
                    } else {
                        $('#hstNumberContainer').hide();
                        $('#hstNumber').val('');
                    }
                }

                function toggleHSTDependentFields() {
                    if ($('#isHSTRegistration').is(':checked')) {
                        $('#hstDependentFields').show();
                    } else {
                        $('#hstDependentFields').hide();
                        $('#hstReportingPeriod').val('');
                        $('#hstFiscalYear').val('');
                    }
                }

                function togglePayrollDependentFields() {
                    if ($('#isPayroll').is(':checked')) {
                        $('#PayrollDependentFields').show();
                    } else {
                        $('#PayrollDependentFields').hide();
                        $('#pd7aReportingPeriod').val('');
                    }
                }


            });
        </script>

    }

</div>
<!-- End Entry -->
