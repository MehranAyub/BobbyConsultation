@using AVStaffing.LocalResource
@using AVStaffing.Migrations
@using AVStaffing.Models
@using AVStaffing.Models.Constants
@using AVStaffing.Models.Entities
@using Newtonsoft.Json
@model AVStaffing.Models.ViewModels.LeadsViewModel

@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<UserGroup> userGroups = ViewBag.UserGroups as List<UserGroup>;

    var lst = new Dictionary<string, string>();
    lst.Add(Interval.Daily, Interval.Daily);
    lst.Add(Interval.Weekly, Interval.Weekly);
    lst.Add(Interval.Hourly, Interval.Hourly);
    lst.Add("Every 5 Minutes", Interval.Minutely);
    lst.Add(Interval.Monthly, Interval.Monthly);
    lst.Add(Interval.Yearly, Interval.Yearly);

    if (userGroups == null)
    {
        userGroups = new List<UserGroup>();
    }



}

<style>
    .spinner1 {
        height: 60px;
        width: 60px;
        margin: auto;
        display: flex;
        position: absolute;
        -webkit-animation: rotation .6s infinite linear;
        -moz-animation: rotation .6s infinite linear;
        -o-animation: rotation .6s infinite linear;
        animation: rotation .6s infinite linear;
        border-left: 6px solid rgba(0, 174, 239, .15);
        border-right: 6px solid rgba(0, 174, 239, .15);
        border-bottom: 6px solid rgba(0, 174, 239, .15);
        border-top: 6px solid rgba(0, 174, 239, .8);
        border-radius: 100%;
    }

    @@-webkit-keyframes rotation {
        from {
            -webkit-transform: rotate(0deg);
        }

        to {
            -webkit-transform: rotate(359deg);
        }
    }

    @@-moz-keyframes rotation {
        from {
            -moz-transform: rotate(0deg);
        }

        to {
            -moz-transform: rotate(359deg);
        }
    }

    @@-o-keyframes rotation {
        from {
            -o-transform: rotate(0deg);
        }

        to {
            -o-transform: rotate(359deg);
        }
    }

    @@keyframes rotation {
        from {
            transform: rotate(0deg);
        }

        to {
            transform: rotate(359deg);
        }
    }

    #overlay {
        position: absolute;
        display: none;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(240,240,240,0.5);
        z-index: 2;
        cursor: pointer;
    }

    .bg-secondary {
        background-color: #F3F6F9 !important;
    }

    .text-lead {
        color: #3699FF
    }

    .text-white a {
        color: white !important;
    }

    [v-cloak] {
        display: none;
    }
</style>

<div class="subheader py-2 py-lg-6  subheader-transparent " id="kt_subheader">
    <div class=" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
        <div class="d-flex align-items-center flex-wrap mr-1">
            <div class="d-flex align-items-baseline flex-wrap mr-5">
                <h5 class="text-dark font-weight-bold my-1 mr-5">
                    @Resource.JobManagementTitle
                </h5>

                <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                    <li class="breadcrumb-item">
                        <a href="#/" class="text-muted">
                            @Resource.Home
                        </a>
                    </li>

                    <li class="breadcrumb-item">
                        <a href="#/" class="text-muted">
                            @Resource.Dashboard
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="d-flex flex-column-fluid">
<div class="container" id="LeadsPage" v-cloak>
        <div class="row">
            <div class="col-md-6">
                <div class="card card-custom gutter-b card-stretch">
                    <div class="card-header border-0 pt-5">
                        <h3 class="card-title align-items-start flex-column">
                            <span class="card-label font-weight-bolder text-dark">@Resource.ActiveJobs</span>
                        </h3>
                        <div class="card-toolbar">
                            <a href="@Url.RouteUrl("Home")" class="btn btn-light-primedicalRecordy btn-md py-2 font-weight-bolder">
                                <i class="fa fa-plus"></i>  @Resource.CreateNewJob
                            </a>
                        </div>
                    </div>
                    <div class="card-body pt-2 pb-0">
                        <div class="kt-grid__item kt-grid__item--fluid kt-grid kt-grid--ver kt-grid--stretch">
                            <div class="kt-container kt-body  kt-grid kt-grid--ver" id="kt_body">
                                <div class="kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor">
                                    <div class="kt-content kt-grid__item kt-grid__item--fluid" id="kt_content">
                                        <div :class="{'bg-primedicalRecordy text-white': SelectedJob.Id == item.Id, 'bg-secondary text-lead' : SelectedJob.Id != item.Id ,'row d-flex align-items-center': true}"
                                             v-for="item in ActiveJobs" style="margin-bottom: 20px">
                                            <div class="col-1">
                                                <div class="job__favicon">
                                                    <img src="https://s3.us-west-2.amazonaws.com/vp-files-ore/metadata/_vol_9/_data_907/907958/1bf3a7b629533734a04f9ccc99c2ac55.png" width="18" height="18">
                                                </div>
                                            </div>
                                            <div class="col-8">
                                                <div style="margin-top:5px">
                                                    <b>{{item.Name}}</b>
                                                    <p><a target="_blank" :href="item.Url">{{item.Url.slice(0, 150)}}</a></p>
                                                </div>
                                            </div>
                                            <div class="col-2">
                                                <div class="btn-group">
                                                    <a class="btn" href="#/" @@click="PauseJob(item)"><i class="fa fa-pause"></i></a>
                                                    <a class="btn" href="#/" @@click="DeleteJob(item)"><i class="fa fa-trash"></i></a>
                                                    <a class="btn" href="#/" @@click="SelectJob(item)"><i class="fa fa-angle-right" style="font-size: 1.6rem"></i></a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="kt-subheader   kt-grid__item" id="kt_subheader">
                                        <div class="kt-subheader__main">
                                            <h3 class="kt-subheader__title">@Resource.InactiveJobs</h3>
                                        </div>
                                    </div>

                                    <div class="kt-content kt-grid__item kt-grid__item--fluid" id="kt_content">

                                        <div :class="{'bg-primedicalRecordy text-white': SelectedJob.Id == item.Id, 'bg-secondary text-lead' : SelectedJob.Id != item.Id ,'row d-flex align-items-center': true}"
                                             v-for="item in InactiveJobs" style="margin-bottom: 20px">
                                            <div class="col-1">
                                                <div class="job__favicon">
                                                    <img src="https://s3.us-west-2.amazonaws.com/vp-files-ore/metadata/_vol_9/_data_907/907958/1bf3a7b629533734a04f9ccc99c2ac55.png" width="18" height="18">
                                                </div>
                                            </div>
                                            <div class="col-8">
                                                <div style="margin-top:5px">
                                                    <b>{{item.Name}}</b>
                                                    <p><a target="_blank" :href="item.Url">{{item.Url.slice(0, 150)}}</a></p>
                                                </div>
                                            </div>
                                            <div class="col-2">
                                                <div class="btn-group">
                                                    <a class="btn text-white" href="#/" @@click="ResumeJob(item)"><i class="fa fa-play"></i></a>
                                                    <a class="btn text-white" href="#/" @@click="DeleteJob(item)"><i class="fa fa-trash"></i></a>
                                                    <a class="btn text-white" href="#/" @@click="SelectJob(item)"><i class="fa fa-angle-right" style="font-size: 1.6rem"></i></a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>

                </div>
            </div>
            <div class="col-md-6">
                <div class="card card-custom gutter-b card-stretch">

                    <div class="card-header border-0 pt-5">
                        <h3 class="card-title align-items-start flex-column">
                            <span class="card-label font-weight-bolder text-dark">@Resource.JobDetails</span>
                        </h3>
                        <div class="card-toolbar">
                            <div class="dropdown-menu dropdown-menu-sm dropdown-menu-right"></div>
                        </div>
                    </div>
                    <div class="card-body pt-2 pb-0">
                        <div class="kt-content kt-grid__item kt-grid__item--fluid">
                            <div class="row">
                                <div class="col-6">
                                    <input type="text" class="form-control" placeholder="Name" @@blur="UpdateJob(SelectedJob)" v-model="SelectedJob.Name" />
                                </div>
                                <div class="col-6">

                                    <select2-multiple class="form-control" :options="SelectedJobKeywords" multiple v-model="KeywordsSelected">
                                        <option disabled value="0">Select one</option>
                                    </select2-multiple>
                                    @*<select class="form-control" id="keywordDropdown">
                                        <option v-for="keyword in SelectedJobKeywords" :value="keyword.Id">{{keyword.Name}}</option>
                                    </select>*@

                                </div>
                            </div>
                            <br />
                            
                
                            <div class="row">
                                <div class="col-6">
                                    <select class="form-control" disabled="disabled" v-model="SelectedJob.CompareType">
                                        <option value="1">Text compare</option>
                                        <option value="2">Web compare</option>
                                        <option>Visual compare</option>
                                    </select>
                                </div>
                                <div class="col-6">
                                    <select class="form-control" @@change="UpdateJob(SelectedJob)" v-model="SelectedJob.Interval">
                                        @foreach (var item in lst)
                                        {
                                            <option :selected="SelectedJob.Interval == '@item.Value'" value="@item.Value">@item.Key</option>
                                        }
                                    </select>

                                </div>
                                
                            </div>
                        </div>

                        <br />

                        <div class="kt-subheader  kt-grid__item" id="kt_subheader">
                            <div class="kt-subheader__main">
                                <h3 class="kt-subheader__title">@Resource.ChangeHistory</h3>
                            </div>
                        </div>

                        <div class="kt-content kt-grid__item kt-grid__item--fluid">

                            <div class="row">
                                <div class="col-12">
                                    <table class="table table-striped">
                                        <tr v-if="SelectedJobChangeLog != null && SelectedJobChangeLog.length > 0" v-for="row in SelectedJobChangeLog">
                                            <td>{{moment(row.ChangeDate).format('DD MMM YYYY hh:mm A')}}</td>
                                            <td>{{row.KeywordCount}}</td>
                                        </tr>
                                        <tr v-if="SelectedJobChangeLog == null || SelectedJobChangeLog.length == 0">
                                            <td colspan="3" class="align-self-center">@Resource.NoDataFound</td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>


                        <br />
                        <div class="kt-subheader   kt-grid__item" id="kt_subheader">
                            <div class="kt-subheader__main">
                                <h3 class="kt-subheader__title">@Resource.LastChecks</h3>
                            </div>
                        </div>

                        <div class="kt-content kt-grid__item kt-grid__item--fluid">

                            <div class="row">
                                <div class="col-12">
                                    <table class="table table-striped">
                                        <tr>
                                            <th>@Resource.Date</th>
                                            <th>@Resource.Change</th>
                                            <th>@Resource.Triggered</th>
                                        </tr>
                                        <tr v-if="SelectedJobLastChecks != null && SelectedJobLastChecks.length > 0" v-for="row in SelectedJobLastChecks">
                                            <td>{{moment(row.ChangeDate).format('DD MMM YYYY hh:mm A')}}</td>
                                            <td>{{row.Change}}</td>
                                            <td>{{row.Triggered}}</td>
                                        </tr>
                                        <tr v-if="SelectedJobLastChecks == null || SelectedJobLastChecks.length == 0">
                                            <td colspan="3" class="align-self-center">@Resource.NoDataFound</td>
                                        </tr>
                                    </table>
                                </div>

                            </div>
                        </div>

                        <div id="overlay" onclick="off()">
                            <div class="w-100 d-flex justify-content-center align-items-center">
                                <div class="spinner1"></div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>












@section Scripts{

    <script type="text/x-template" id="select2-template">
        <select>
            <slot></slot>
        </select>
    </script>



    <script>
        Vue.component('select2Multiple', {
            props: ['options', 'value'],
            template: '#select2-template',
            mounted: function () {
                var vm = this;
                $(this.$el)
                    // init select2
                    .select2({ data: this.options })
                    .val(this.value)
                    .trigger('change')
                    // emit event on change.
                    .on('change',
                        function () {
                            vm.$emit('input', $(this).val());
                        });
            },
            watch: {
                value: function (value) {
                    console.log(value);
                    console.log(this.options);
                    //re initialize as new values are getting loaded
                    $(this.$el).empty().select2('destroy');
                    $(this.$el).select2({ data: this.options }).val(this.value);

                    if ([...value].sort().join(",") !== [...$(this.$el).val()].sort().join(","))
                        $(this.$el).val(value).trigger('change');
                },
                options: function (options) {
                    // update options
                    $(this.$el).off().select2('data', null);
                    $(this.$el).select2({ data: options });
                }
            },
            destroyed: function () {
                $(this.$el).off().select2('destroy')
            }
        })
    </script>


    <script>


        var leads = @Html.Raw(JsonConvert.SerializeObject(Model.WebsiteLeads));


        var leads = new Vue({
            el: "#LeadsPage",

            data: {
                Jobs: leads,
                SelectedJob: {},
                SelectedJobChangeLog: [],
                SelectedJobLastChecks: [],
                SelectedJobKeywords: [],
                KeywordsSelected: []
            },

            mounted: function() {
                console.log(this.InactiveJobs);
                console.log(this.ActiveJobs);
            },
            computed: {
                ActiveJobs: function() {
                    return this.Jobs.filter(x => x.Active);
                },
                InactiveJobs: function() {
                    return this.Jobs.filter(x => !x.Active);
                }
            },
            methods: {
                on() {
                    document.getElementById("overlay").style.display = "flex";
                },
                off() {
                    document.getElementById("overlay").style.display = "none";
                },
                SelectJob(job) {
                    var vm = this;
                    vm.on();
                    this.SelectedJob = job;
                    console.log(this.SelectedJob);
                    $.post("@Url.Action("GetHistory", "Lead")", { leadId: job.Id })
                        .done(function (resp) {
                            var history = JSON.parse(resp);
                            console.log(history);
                            vm.SelectedJobChangeLog = history.ChangeHistories;
                            vm.SelectedJobLastChecks = history.LastChecks;
                            vm.SelectedJobKeywords = vm.SelectedJob.Keywords.map((x) => ({ id: x.Id.toString(), text: x.Name }));
                            vm.KeywordsSelected = vm.SelectedJob.Keywords.map((x) => (x.Id.toString()));
                            vm.$forceUpdate();  //
                            vm.off();
                        })
                        .fail(function(err) {
                            vm.off();
                        });

                },
                PauseJob(job) {
                    this.on();
                    var vm = this;
                    $.post("@Url.Action("PauseLead", "Lead")", { leadId: job.Id })
                        .done(function(resp) {
                            job.Active = false;
                            console.log(resp);
                            vm.off();
                        })
                        .fail(function(err) {
                            console.log(err);
                            vm.off();
                        });
                },
                ResumeJob(job) {
                    this.on();
                    var vm = this;
                    $.post("@Url.Action("ResumeLead", "Lead")", { leadId: job.Id })
                        .done(function(resp) {
                            job.Active = true;
                            console.log(resp);
                            vm.off();
                        })
                        .fail(function(err) {
                            console.log(err);
                            vm.off();
                        });

                },
                UpdateJob(job) {
                    var vm = this;
                    vm.on();
                    $.post("@Url.Action("UpdateLead", "Lead")", { lead: job })
                        .done(function(resp) {

                            vm.off();
                        })
                        .fail(function(err) {
                            vm.off();
                        });
                },
                DeleteJob(job) {
                    var vm = this;
                    bootbox.confirm("Are you sure you want to delete this lead ?",
                        function(result) {
                            if (result) {
                                vm.on();
                                $.post("@Url.Action("DeleteLead", "Lead")", { id: job.Id }).done(function() {
                                    vm.Jobs = vm.Jobs.filter(function(i) {
                                        return i.Id != job.Id;
                                    });
                                    vm.off();
                                }).fail(function(err) {
                                    vm.off();
                                });
                            }
                        });

                }
            }
        });
    </script>
}